import numpy as np
import pandas as pd
import sklearn 

from sklearn.datasets import load_boston
df=load_boston()
df.keys()

boston=pd.DataFrame(df.data,columns=df.feature_names)
boston.head()

boston["MEDV"]=df.target
boston.head()

boston.isnull()

boston.isnull().sum()

from sklearn.model_selection import train_test_split
x = boston.drop("MEDV",axis=1)
y = boston["MEDV"]
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.15,random_state=1)

print(x_train.shape)
print(x_test.shape)
print(y_train.shape)
print(y_test.shape) 

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

lin_model = LinearRegression()
lin_model.fit(x_train,y_train)

y_train_predict = lin_model.predict(x_train)
rmse=(np.sqrt(mean_squared_error(y_train,y_train_predict)))

print("the model perdormance for training set")
print("RMSE {}".format(rmse))
print("\n")

y_test_predict=lin_model.predict(x_test)
rmse=(np.sqrt(mean_squared_error(y_test,y_test_predict)))

print("the model perdormance for testing set")
print("RMSE {}".format(rmse))
print("\n")
